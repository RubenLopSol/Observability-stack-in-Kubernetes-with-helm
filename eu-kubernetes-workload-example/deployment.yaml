apiVersion: v1
kind: Service
metadata:
  name: postgresql
spec:
  selector:
    app: postgresql
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-backend
  labels:
    app: fastapi-backend
spec:
  selector:
    app: fastapi-backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-frontend
spec:
  selector:
    app: fastapi-frontend
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7.0.12
        # always pull
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASSWORD
          value: "password"
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_USER
          value: "default"
        - name: REDIS_DB
          value: "0"
        - name: REDIS_URL
          value: "redis://default:password@redis:6379/0"
        - name: REDIS_URL_NO_PASS
          value: "redis://redis:6379/0"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:15.3
        # always pull
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        env:   
        - name: POSTGRES_DB
          value: postgresdb
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: "password"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-backend
  labels:
    app: fastapi-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-backend
  template:
    metadata:
      labels:
        app: fastapi-backend
      annotations:
        prometheus.io/scrape: "true"
        # prometheus.io/port: "8000"
      
    spec:
      shareProcessNamespace: true
      volumes:
        - name: backend-logs
          emptyDir: {}
      containers:
      - name: fastapi-backend
        image: public.ecr.aws/o4f4y7h1/missions-infra/fastapi-backend:latest
        #always pull
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        volumeMounts:
          - mountPath: /app/logs
            name: backend-logs
        env:
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://alloy.app.svc.cluster.local:4317"
          #value: "http://collector:4317" 
          #value: "http://grafana-k8s-monitoring-alloy-receiver.observability.svc.cluster.local:4317"
        - name: OTEL_SERVICE_NAME
          value: "fastapi-backend"
        # Database Connection
        - name: DB_NAME
          value: postgresdb
        - name: DB_USER
          value: postgres
        - name: DB_PASSWORD
          value: "password"
        - name: DB_HOST
          value: postgresql
        - name: DB_PORT
          value: "5432"
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-frontend
  labels:
    app: fastapi-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi-frontend
  template:
    metadata:
      labels:
        app: fastapi-frontend
    spec:
      containers:
      - name: fastapi-frontend
        image: public.ecr.aws/o4f4y7h1/missions-infra/fastapi-frontend:latest
        # always pull
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: BACKEND_URL
          value: "http://fastapi-backend:8000"
